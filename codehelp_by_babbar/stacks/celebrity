#include <iostream>
#include<stack>
using namespace std;
class Solution 
{
    public:
    int knows(){
    }
    bool knows(vector<vector<int> >& M,int a,int b){
        if(M[a][b]==1){
            return true;
        }
        else{
            return false;
        }
    }
    //Function to find if there is a celebrity in the party or not.
    int celebrity(vector<vector<int> >& M, int n) 
    {
        // code here 
        stack<int> st;
        for(int i=0;i<n;i++){
            st.push(n);
        }
        while(st.size()!=1){
            
         int a=st.top();
         st.pop();
         int b=st.top();
         st.pop();
        
         if(knows(M,a,b)){
            st.push(b);
         }
        
         if(knows(M,b,a)){
             st.push(a);
         }
         
        }
         // now check the condition for the celebrity.
        //   1-> if the column is 1 except diagonal element 
        //    2-> if the row is 0 in all row;
        
         int candidate =st.top();
         int rowcount =0;
         int colcount =0;
         bool rowcheck=false;
          bool colcheck=false;
         for(int i=0;i<n;i++)
         {
             if(M[candidate][i]==1){
                 rowcount++;
             }
             if(M[i][candidate]){
                 colcount++;
             }
         }
         if(rowcount==n-1){
             rowcheck=true;
         }
         if(colcount==n){
             colcheck=true;
         }
         if(colcheck&&rowcheck==true){
             return true;
             
         }
         return false;
    }